{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "HW3.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "LdHpbVqMVEoL"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import os\n",
        "import PIL\n",
        "import tensorflow as tf\n",
        "\n",
        "from tensorflow import keras\n",
        "from tensorflow.keras import layers\n",
        "from tensorflow.keras.models import Sequential\n",
        "\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "\n",
        "from sklearn.metrics import confusion_matrix, accuracy_score, classification_report"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rw0prX71YLMf"
      },
      "source": [
        "batch_size = 64\n"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "t8WA-KBQVLRa",
        "outputId": "68a61378-8b5d-446e-a63f-330d3365cf5e"
      },
      "source": [
        "image_data_gen = ImageDataGenerator(#rescale = 1./255,\n",
        "                                    shear_range = 0.2,\n",
        "                                    zoom_range = 0.2,\n",
        "                                    horizontal_flip = True,\n",
        "                                    validation_split=0.2)\n",
        "\n",
        "train_it = image_data_gen.flow_from_directory(directory='/content/drive/MyDrive/own_dataset',\n",
        "                                              target_size=(32, 32),\n",
        "                                              color_mode='rgb',\n",
        "                                              batch_size=batch_size,\n",
        "                                              class_mode='binary',\n",
        "                                              subset='training'\n",
        "                                             )\n",
        "\n",
        "test_it = image_data_gen.flow_from_directory(directory='/content/drive/MyDrive/own_dataset',\n",
        "                                              target_size=(32, 32),\n",
        "                                              color_mode='rgb',\n",
        "                                              batch_size=batch_size,\n",
        "                                              class_mode='binary',\n",
        "                                              shuffle = False,\n",
        "                                              subset='validation'\n",
        "                                             )\n",
        "\n"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Found 240 images belonging to 3 classes.\n",
            "Found 60 images belonging to 3 classes.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KdOJYbDcdaHA"
      },
      "source": [
        "model = Sequential([\n",
        "  layers.experimental.preprocessing.Rescaling(1./255, input_shape=(32, 32, 3)),\n",
        "  layers.Conv2D(16, 3, padding='same', activation='relu'),\n",
        "  layers.MaxPooling2D(),\n",
        "  layers.Conv2D(32, 3, padding='same', activation='relu'),\n",
        "  layers.MaxPooling2D(),\n",
        "  layers.Conv2D(64, 3, padding='same', activation='relu'),\n",
        "  layers.MaxPooling2D(),\n",
        "  layers.Dropout(0.2),\n",
        "  layers.Flatten(),\n",
        "  layers.Dense(128, activation='relu'),\n",
        "  layers.Dense(100)\n",
        "])"
      ],
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YNLcTg0raQdP"
      },
      "source": [
        "model.compile(optimizer='adam',\n",
        "              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n",
        "              metrics=['accuracy'])"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "a_3OMWaDaSox",
        "outputId": "d7e1601d-594d-4f1a-8259-a86642c1647e"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "rescaling_1 (Rescaling)      (None, 32, 32, 3)         0         \n",
            "_________________________________________________________________\n",
            "conv2d_3 (Conv2D)            (None, 32, 32, 16)        448       \n",
            "_________________________________________________________________\n",
            "max_pooling2d_3 (MaxPooling2 (None, 16, 16, 16)        0         \n",
            "_________________________________________________________________\n",
            "conv2d_4 (Conv2D)            (None, 16, 16, 32)        4640      \n",
            "_________________________________________________________________\n",
            "max_pooling2d_4 (MaxPooling2 (None, 8, 8, 32)          0         \n",
            "_________________________________________________________________\n",
            "conv2d_5 (Conv2D)            (None, 8, 8, 64)          18496     \n",
            "_________________________________________________________________\n",
            "max_pooling2d_5 (MaxPooling2 (None, 4, 4, 64)          0         \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 4, 4, 64)          0         \n",
            "_________________________________________________________________\n",
            "flatten_1 (Flatten)          (None, 1024)              0         \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 128)               131200    \n",
            "_________________________________________________________________\n",
            "dense_2 (Dense)              (None, 100)               12900     \n",
            "=================================================================\n",
            "Total params: 167,684\n",
            "Trainable params: 167,684\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "kv6Xy0_paVdA",
        "outputId": "a86cb304-31ba-412a-c99b-ef69cd5a87f9"
      },
      "source": [
        "epochs=20\n",
        "history = model.fit(\n",
        "  train_it,\n",
        "  validation_data=test_it,\n",
        "  epochs=epochs\n",
        ")"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n",
            "4/4 [==============================] - 1s 303ms/step - loss: 0.8329 - accuracy: 0.6167 - val_loss: 0.8594 - val_accuracy: 0.6333\n",
            "Epoch 2/20\n",
            "4/4 [==============================] - 1s 260ms/step - loss: 0.8041 - accuracy: 0.6792 - val_loss: 0.8643 - val_accuracy: 0.6500\n",
            "Epoch 3/20\n",
            "4/4 [==============================] - 1s 249ms/step - loss: 0.7603 - accuracy: 0.6542 - val_loss: 0.8517 - val_accuracy: 0.6000\n",
            "Epoch 4/20\n",
            "4/4 [==============================] - 1s 252ms/step - loss: 0.7112 - accuracy: 0.7125 - val_loss: 0.8093 - val_accuracy: 0.7333\n",
            "Epoch 5/20\n",
            "4/4 [==============================] - 1s 251ms/step - loss: 0.7372 - accuracy: 0.6792 - val_loss: 0.8044 - val_accuracy: 0.6667\n",
            "Epoch 6/20\n",
            "4/4 [==============================] - 1s 230ms/step - loss: 0.7010 - accuracy: 0.6708 - val_loss: 0.7565 - val_accuracy: 0.7333\n",
            "Epoch 7/20\n",
            "4/4 [==============================] - 1s 247ms/step - loss: 0.6894 - accuracy: 0.7167 - val_loss: 0.7997 - val_accuracy: 0.7167\n",
            "Epoch 8/20\n",
            "4/4 [==============================] - 1s 237ms/step - loss: 0.6734 - accuracy: 0.6875 - val_loss: 0.7664 - val_accuracy: 0.7167\n",
            "Epoch 9/20\n",
            "4/4 [==============================] - 1s 254ms/step - loss: 0.7166 - accuracy: 0.7042 - val_loss: 0.8050 - val_accuracy: 0.6333\n",
            "Epoch 10/20\n",
            "4/4 [==============================] - 1s 265ms/step - loss: 0.7196 - accuracy: 0.6542 - val_loss: 0.8116 - val_accuracy: 0.7000\n",
            "Epoch 11/20\n",
            "4/4 [==============================] - 1s 267ms/step - loss: 0.6142 - accuracy: 0.7708 - val_loss: 0.7906 - val_accuracy: 0.6667\n",
            "Epoch 12/20\n",
            "4/4 [==============================] - 1s 242ms/step - loss: 0.6133 - accuracy: 0.7292 - val_loss: 0.7343 - val_accuracy: 0.7167\n",
            "Epoch 13/20\n",
            "4/4 [==============================] - 1s 230ms/step - loss: 0.5817 - accuracy: 0.7458 - val_loss: 0.7465 - val_accuracy: 0.7500\n",
            "Epoch 14/20\n",
            "4/4 [==============================] - 1s 241ms/step - loss: 0.5780 - accuracy: 0.7625 - val_loss: 0.7542 - val_accuracy: 0.7500\n",
            "Epoch 15/20\n",
            "4/4 [==============================] - 1s 254ms/step - loss: 0.6271 - accuracy: 0.7375 - val_loss: 0.7849 - val_accuracy: 0.7000\n",
            "Epoch 16/20\n",
            "4/4 [==============================] - 1s 252ms/step - loss: 0.5597 - accuracy: 0.7542 - val_loss: 0.7000 - val_accuracy: 0.7667\n",
            "Epoch 17/20\n",
            "4/4 [==============================] - 1s 262ms/step - loss: 0.5940 - accuracy: 0.7333 - val_loss: 0.7692 - val_accuracy: 0.7333\n",
            "Epoch 18/20\n",
            "4/4 [==============================] - 1s 266ms/step - loss: 0.5470 - accuracy: 0.7667 - val_loss: 0.6614 - val_accuracy: 0.7167\n",
            "Epoch 19/20\n",
            "4/4 [==============================] - 1s 264ms/step - loss: 0.5036 - accuracy: 0.8042 - val_loss: 0.6768 - val_accuracy: 0.7667\n",
            "Epoch 20/20\n",
            "4/4 [==============================] - 1s 250ms/step - loss: 0.4876 - accuracy: 0.8167 - val_loss: 0.6283 - val_accuracy: 0.7833\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "id": "PgP3j2EYeTVS",
        "outputId": "a904efdc-a54b-48cd-8b34-0cad3ac52097"
      },
      "source": [
        "acc = history.history['accuracy']\n",
        "val_acc = history.history['val_accuracy']\n",
        "\n",
        "loss = history.history['loss']\n",
        "val_loss = history.history['val_loss']\n",
        "\n",
        "epochs_range = range(epochs)\n",
        "\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.subplot(1, 2, 1)\n",
        "plt.plot(epochs_range, acc, label='Training Accuracy')\n",
        "plt.plot(epochs_range, val_acc, label='Validation Accuracy')\n",
        "plt.legend(loc='lower right')\n",
        "plt.title('Training and Validation Accuracy')\n",
        "\n",
        "plt.subplot(1, 2, 2)\n",
        "plt.plot(epochs_range, loss, label='Training Loss')\n",
        "plt.plot(epochs_range, val_loss, label='Validation Loss')\n",
        "plt.legend(loc='upper right')\n",
        "plt.title('Training and Validation Loss')\n",
        "plt.show()"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 576x576 with 2 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "WD5rIwSzfPMJ",
        "outputId": "dec006d2-2c40-4797-ff82-de87ba442ddb"
      },
      "source": [
        "prediction= model.predict(test_it, verbose=2)\n",
        "#prediction= (prediction > 0.5)\n",
        "prediction\n"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 - 0s\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 7.701067 ,  7.8536234,  7.8690004, ..., -3.2551208, -3.6799536,\n",
              "        -2.5991015],\n",
              "       [13.639778 ,  9.754093 , 12.5751915, ..., -3.8133495, -5.010479 ,\n",
              "        -3.211376 ],\n",
              "       [11.541638 ,  6.9930754,  8.916321 , ..., -2.9461472, -3.57057  ,\n",
              "        -2.8156714],\n",
              "       ...,\n",
              "       [ 9.237471 ,  9.833407 , 10.127929 , ..., -4.0305505, -4.3236814,\n",
              "        -3.3069317],\n",
              "       [11.900287 , 10.422798 , 14.214545 , ..., -4.3370256, -4.8121033,\n",
              "        -2.9205208],\n",
              "       [ 9.6392565, 10.155816 , 12.517423 , ..., -4.173155 , -4.4786854,\n",
              "        -3.2482204]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "Gb7CmwsZfXUz",
        "outputId": "9eec21fa-452b-45dd-e908-095783c565f9"
      },
      "source": [
        "val_labels=test_it.classes\n",
        "val_labels"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n",
              "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2,\n",
              "       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], dtype=int32)"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "dN_ktjJofe7f",
        "outputId": "d39458b3-6cb2-4b08-9662-327da18c8bf5"
      },
      "source": [
        "results = model.evaluate(test_it)"
      ],
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1/1 [==============================] - 0s 203ms/step - loss: 0.6245 - accuracy: 0.7500\n"
          ]
        }
      ]
    }
  ]
}